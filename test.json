{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Content API",
    "description": "The API to manage the Marketplace content for Mendix apps.",
    "termsOfService": "https://www.mendix.com/terms-of-use/",
    "contact": {
      "name": "Mendix Support",
      "url": "https://support.mendix.com",
      "email": "support@mendix.com"
    }
  },
  "servers": [
    {
      "url": "https://marketplace-api.mendix.com/v1"
    }
  ],
  "paths": {
    "/content": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get the list of content.",
        "description": "Returns Marketplace content. This endpoint uses pagination. Public content and content belonging to the company of the personal access token’s owner would be returned.",
        "operationId": "getContent",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Allows to query on the name of the last published version of the content. This is can help in getting the Identifier of a content. This will do exact match for the value passed in the filter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isPrivate",
            "in": "query",
            "description": "Allows to filter on public or private content. Supported values are 'true' or 'false' . In case filter is 'true', it will return only private last published versions of content belonging to the company of the personal access token’s owner. In case filter is 'false',  it will return only public last published versions of the content. If no value is passed, then last published versions of both public content and private content belonging to the company of the personal access token’s owner will be returned.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "publishedSince",
            "in": "query",
            "description": "Allows to find the content whose last published version was published since the date passed the filter. Values are expected to be using the full-date format as specified in RFC 3339. This means the following format: 2023-09-01.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The maximum number of content that can be returned per request. If no limit is provided, it shall be defaulted to 10, the maximum limit that can be supplied is 100, if a limit over 100 is supplied, it shall be defaulted to 100 and no error message shall be generated.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "The offset is the zero-based index of the first content to be returned on the page.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contentId": {
                            "type": "integer",
                            "format": "int64",
                            "example": 50,
                            "description": "The identifier of the content"
                          },
                          "publisher": {
                            "type": "string",
                            "example": "Automation Company Ltd.",
                            "description": "This is the company who owns the content."
                          },
                          "type": {
                            "type": "string",
                            "example": "Module",
                            "description": "This will return the type of the content selected during onboarding. The full list is present here. - https://docs.mendix.com/appstore/general/app-store-overview/."
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "Authentication"
                                }
                              }
                            }
                          },
                          "supportCategory": {
                            "type": "string",
                            "example": "Community",
                            "enum": [
                              "Community",
                              "Plaform",
                              "Partner"
                            ],
                            "description": "Support for this content. For more information - https://docs.mendix.com/appstore/general/app-store-content-support/"
                          },
                          "licenseUrl": {
                            "type": "string",
                            "format": "url",
                            "example": "http://www.apache.org/licenses/LICENSE-2.0.html",
                            "description": "The license selected during onboarding."
                          },
                          "isPrivate": {
                            "type": "boolean",
                            "description": "This shows if the content is public or private."
                          },
                          "latestVersion": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "3d Viewer",
                                "description": "The name of the version of the content"
                              },
                              "versionId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The uuid of the version."
                              },
                              "versionNumber": {
                                "type": "string",
                                "pattern": "^\\d-\\d-\\d$",
                                "example": "10.1.1",
                                "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
                              },
                              "minSupportedMendixVersion": {
                                "type": "string",
                                "pattern": "^\\d-\\d-\\d$",
                                "example": "10.1.1",
                                "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
                              },
                              "publicationDate": {
                                "type": "string",
                                "format": "yyyy-MM-ddTHH-mm-ssZ",
                                "example": "2023-09-01T09:04:00Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request likely contains invalid data or is missing data.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-400": {
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Bad Request",
                        "detail": "The request could not be processed by the server because the input parsing/processing failed."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "There were no usable authentication credentials found.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-401": {
                    "value": {
                      "error": {
                        "code": 401,
                        "message": "Unauthorized",
                        "detail": "Credentials could not be authenticated or no credentials were provided."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occured while processing the request.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-500": {
                    "value": {
                      "error": {
                        "code": 500,
                        "message": "Internal Server Error",
                        "detail": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/{contentId}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Gets a specific content.",
        "description": "The content metadata would be from the last published version of the content. Public content and content belonging to the company of the personal access token's owner can be queried.",
        "operationId": "getSpecificContent",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Identifier of the content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contentId": {
                      "type": "integer",
                      "format": "int64",
                      "example": 50,
                      "description": "The identifier of the content"
                    },
                    "publisher": {
                      "type": "string",
                      "example": "Automation Company Ltd.",
                      "description": "This is the company who owns the content."
                    },
                    "type": {
                      "type": "string",
                      "example": "Module",
                      "description": "This will return the type of the content selected during onboarding. The full list is present here. - https://docs.mendix.com/appstore/general/app-store-overview/."
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Authentication"
                          }
                        }
                      }
                    },
                    "supportCategory": {
                      "type": "string",
                      "example": "Community",
                      "enum": [
                        "Community",
                        "Plaform",
                        "Partner"
                      ],
                      "description": "Support for this content. For more information - https://docs.mendix.com/appstore/general/app-store-content-support/"
                    },
                    "licenseUrl": {
                      "type": "string",
                      "format": "url",
                      "example": "http://www.apache.org/licenses/LICENSE-2.0.html",
                      "description": "The license selected during onboarding."
                    },
                    "isPrivate": {
                      "type": "boolean",
                      "description": "This shows if the content is public or private."
                    },
                    "latestVersion": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "3d Viewer",
                          "description": "The name of the version of the content"
                        },
                        "versionId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The uuid of the version."
                        },
                        "versionNumber": {
                          "type": "string",
                          "pattern": "^\\d-\\d-\\d$",
                          "example": "10.1.1",
                          "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
                        },
                        "minSupportedMendixVersion": {
                          "type": "string",
                          "pattern": "^\\d-\\d-\\d$",
                          "example": "10.1.1",
                          "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
                        },
                        "publicationDate": {
                          "type": "string",
                          "format": "yyyy-MM-ddTHH-mm-ssZ",
                          "example": "2023-09-01T09:04:00Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request likely contains invalid data or is missing data.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-400": {
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Bad Request",
                        "detail": "The request could not be processed by the server because the input parsing/processing failed."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "There were no usable authentication credentials found.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-401": {
                    "value": {
                      "error": {
                        "code": 401,
                        "message": "Unauthorized",
                        "detail": "Credentials could not be authenticated or no credentials were provided."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The required item could not be found.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-404": {
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "Not Found",
                        "detail": "The content is not found."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occured while processing the request.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-500": {
                    "value": {
                      "error": {
                        "code": 500,
                        "message": "Internal Server Error",
                        "detail": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/{contentId}/versions": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Returns all versions of the content.",
        "description": "Public content and content belonging to the company of the personal access token's owner can be queried.",
        "operationId": "getContentVersions",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Identifier of the content.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "UUID of the published version.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "UUID"
            }
          },
          {
            "name": "supportedMendixVersion",
            "in": "query",
            "description": "Allows to find the version that is supported by the Mendix version passed in the filter. In case there are multiple supported versions matching the filter, it will return the most recent published version.",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^\\d-\\d-\\d$",
              "example": "10.1.1"
            }
          },
          {
            "name": "publishedSince",
            "in": "query",
            "description": "Allows to find the content whose last published version was published since the date passed the filter. Values are expected to be using the full-date format as specified in RFC 3339. This means the following format: 2023-09-01.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The maximum number of content version that can be returned per request. If no limit is provided, it shall be defaulted to 10, the maximum limit that can be supplied is 20, if a limit over 20 is supplied, it shall be defaulted to 20 and no error message shall be generated.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 20,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "The offset is the zero-based index of the first content to be returned on the page.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "3d Viewer",
                                "description": "The name of the version of the content"
                              },
                              "versionId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The uuid of the version."
                              },
                              "versionNumber": {
                                "type": "string",
                                "pattern": "^\\d-\\d-\\d$",
                                "example": "10.1.1",
                                "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
                              },
                              "minSupportedMendixVersion": {
                                "type": "string",
                                "pattern": "^\\d-\\d-\\d$",
                                "example": "10.1.1",
                                "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
                              },
                              "publicationDate": {
                                "type": "string",
                                "format": "yyyy-MM-ddTHH-mm-ssZ",
                                "example": "2023-09-01T09:04:00Z"
                              }
                            }
                          }
                        ],
                        "properties": {
                          "releaseNotes": {
                            "type": "string",
                            "example": "The is the release notes for this version.",
                            "description": "The is the release notes for the published versions."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request likely contains invalid data or is missing data.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-400": {
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Bad Request",
                        "detail": "The request could not be processed by the server because the input parsing/processing failed."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "There were no usable authentication credentials found.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-401": {
                    "value": {
                      "error": {
                        "code": 401,
                        "message": "Unauthorized",
                        "detail": "Credentials could not be authenticated or no credentials were provided."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occured while processing the request.\n\nThe error response gives additional feedback.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Malformed request body"
                    }
                  }
                },
                "examples": {
                  "example-500": {
                    "value": {
                      "error": {
                        "code": 500,
                        "message": "Internal Server Error",
                        "detail": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "contentId": {
        "name": "contentId",
        "in": "path",
        "description": "Identifier of the content.",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "versionId": {
        "name": "versionId",
        "in": "query",
        "description": "UUID of the published version.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "UUID"
        }
      },
      "name": {
        "name": "name",
        "in": "query",
        "description": "Allows to query on the name of the last published version of the content. This is can help in getting the Identifier of a content. This will do exact match for the value passed in the filter.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "supportedMendixVersion": {
        "name": "supportedMendixVersion",
        "in": "query",
        "description": "Allows to find the version that is supported by the Mendix version passed in the filter. In case there are multiple supported versions matching the filter, it will return the most recent published version.",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^\\d-\\d-\\d$",
          "example": "10.1.1"
        }
      },
      "isPrivate": {
        "name": "isPrivate",
        "in": "query",
        "description": "Allows to filter on public or private content. Supported values are 'true' or 'false' . In case filter is 'true', it will return only private last published versions of content belonging to the company of the personal access token’s owner. In case filter is 'false',  it will return only public last published versions of the content. If no value is passed, then last published versions of both public content and private content belonging to the company of the personal access token’s owner will be returned.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "publishedSince": {
        "name": "publishedSince",
        "in": "query",
        "description": "Allows to find the content whose last published version was published since the date passed the filter. Values are expected to be using the full-date format as specified in RFC 3339. This means the following format: 2023-09-01.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "yyyy-MM-dd"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "limitContent": {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "The maximum number of content that can be returned per request. If no limit is provided, it shall be defaulted to 10, the maximum limit that can be supplied is 100, if a limit over 100 is supplied, it shall be defaulted to 100 and no error message shall be generated.",
        "schema": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "limitContentVersions": {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "The maximum number of content version that can be returned per request. If no limit is provided, it shall be defaulted to 10, the maximum limit that can be supplied is 20, if a limit over 20 is supplied, it shall be defaulted to 20 and no error message shall be generated.",
        "schema": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 20,
          "default": 10
        }
      },
      "offsetContent": {
        "name": "offset",
        "in": "query",
        "required": false,
        "description": "The offset is the zero-based index of the first content to be returned on the page.",
        "schema": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "default": 0
        }
      }
    },
    "responses": {
      "error400": {
        "description": "The request likely contains invalid data or is missing data.\n\nThe error response gives additional feedback.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "minimum": 0,
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "detail": {
                  "type": "string",
                  "example": "Malformed request body"
                }
              }
            },
            "examples": {
              "example-400": {
                "value": {
                  "error": {
                    "code": 400,
                    "message": "Bad Request",
                    "detail": "The request could not be processed by the server because the input parsing/processing failed."
                  }
                }
              }
            }
          }
        }
      },
      "error401": {
        "description": "There were no usable authentication credentials found.\n\nThe error response gives additional feedback.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "minimum": 0,
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "detail": {
                  "type": "string",
                  "example": "Malformed request body"
                }
              }
            },
            "examples": {
              "example-401": {
                "value": {
                  "error": {
                    "code": 401,
                    "message": "Unauthorized",
                    "detail": "Credentials could not be authenticated or no credentials were provided."
                  }
                }
              }
            }
          }
        }
      },
      "error404": {
        "description": "The required item could not be found.\n\nThe error response gives additional feedback.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "minimum": 0,
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "detail": {
                  "type": "string",
                  "example": "Malformed request body"
                }
              }
            },
            "examples": {
              "example-404": {
                "value": {
                  "error": {
                    "code": 404,
                    "message": "Not Found",
                    "detail": "The content is not found."
                  }
                }
              }
            }
          }
        }
      },
      "error500": {
        "description": "An error occured while processing the request.\n\nThe error response gives additional feedback.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "minimum": 0,
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "detail": {
                  "type": "string",
                  "example": "Malformed request body"
                }
              }
            },
            "examples": {
              "example-500": {
                "value": {
                  "error": {
                    "code": 500,
                    "message": "Internal Server Error",
                    "detail": "Something went wrong."
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "minimum": 0,
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "detail": {
            "type": "string",
            "example": "Malformed request body"
          }
        }
      },
      "appCategories": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Authentication"
            }
          }
        }
      },
      "uuid": {
        "type": "string",
        "format": "uuid",
        "example": "346a2cad-6b96-477a-9225-3957b73ctest"
      },
      "specificContent": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 50,
            "description": "The identifier of the content"
          },
          "publisher": {
            "type": "string",
            "example": "Automation Company Ltd.",
            "description": "This is the company who owns the content."
          },
          "type": {
            "type": "string",
            "example": "Module",
            "description": "This will return the type of the content selected during onboarding. The full list is present here. - https://docs.mendix.com/appstore/general/app-store-overview/."
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Authentication"
                }
              }
            }
          },
          "supportCategory": {
            "type": "string",
            "example": "Community",
            "enum": [
              "Community",
              "Plaform",
              "Partner"
            ],
            "description": "Support for this content. For more information - https://docs.mendix.com/appstore/general/app-store-content-support/"
          },
          "licenseUrl": {
            "type": "string",
            "format": "url",
            "example": "http://www.apache.org/licenses/LICENSE-2.0.html",
            "description": "The license selected during onboarding."
          },
          "isPrivate": {
            "type": "boolean",
            "description": "This shows if the content is public or private."
          },
          "latestVersion": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "3d Viewer",
                "description": "The name of the version of the content"
              },
              "versionId": {
                "type": "string",
                "format": "uuid",
                "description": "The uuid of the version."
              },
              "versionNumber": {
                "type": "string",
                "pattern": "^\\d-\\d-\\d$",
                "example": "10.1.1",
                "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
              },
              "minSupportedMendixVersion": {
                "type": "string",
                "pattern": "^\\d-\\d-\\d$",
                "example": "10.1.1",
                "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
              },
              "publicationDate": {
                "type": "string",
                "format": "yyyy-MM-ddTHH-mm-ssZ",
                "example": "2023-09-01T09:04:00Z"
              }
            }
          }
        }
      },
      "content": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contentId": {
                  "type": "integer",
                  "format": "int64",
                  "example": 50,
                  "description": "The identifier of the content"
                },
                "publisher": {
                  "type": "string",
                  "example": "Automation Company Ltd.",
                  "description": "This is the company who owns the content."
                },
                "type": {
                  "type": "string",
                  "example": "Module",
                  "description": "This will return the type of the content selected during onboarding. The full list is present here. - https://docs.mendix.com/appstore/general/app-store-overview/."
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Authentication"
                      }
                    }
                  }
                },
                "supportCategory": {
                  "type": "string",
                  "example": "Community",
                  "enum": [
                    "Community",
                    "Plaform",
                    "Partner"
                  ],
                  "description": "Support for this content. For more information - https://docs.mendix.com/appstore/general/app-store-content-support/"
                },
                "licenseUrl": {
                  "type": "string",
                  "format": "url",
                  "example": "http://www.apache.org/licenses/LICENSE-2.0.html",
                  "description": "The license selected during onboarding."
                },
                "isPrivate": {
                  "type": "boolean",
                  "description": "This shows if the content is public or private."
                },
                "latestVersion": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "3d Viewer",
                      "description": "The name of the version of the content"
                    },
                    "versionId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The uuid of the version."
                    },
                    "versionNumber": {
                      "type": "string",
                      "pattern": "^\\d-\\d-\\d$",
                      "example": "10.1.1",
                      "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
                    },
                    "minSupportedMendixVersion": {
                      "type": "string",
                      "pattern": "^\\d-\\d-\\d$",
                      "example": "10.1.1",
                      "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
                    },
                    "publicationDate": {
                      "type": "string",
                      "format": "yyyy-MM-ddTHH-mm-ssZ",
                      "example": "2023-09-01T09:04:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "contentVersions": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "3d Viewer",
                      "description": "The name of the version of the content"
                    },
                    "versionId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The uuid of the version."
                    },
                    "versionNumber": {
                      "type": "string",
                      "pattern": "^\\d-\\d-\\d$",
                      "example": "10.1.1",
                      "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
                    },
                    "minSupportedMendixVersion": {
                      "type": "string",
                      "pattern": "^\\d-\\d-\\d$",
                      "example": "10.1.1",
                      "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
                    },
                    "publicationDate": {
                      "type": "string",
                      "format": "yyyy-MM-ddTHH-mm-ssZ",
                      "example": "2023-09-01T09:04:00Z"
                    }
                  }
                }
              ],
              "properties": {
                "releaseNotes": {
                  "type": "string",
                  "example": "The is the release notes for this version.",
                  "description": "The is the release notes for the published versions."
                }
              }
            }
          }
        }
      },
      "version": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "3d Viewer",
            "description": "The name of the version of the content"
          },
          "versionId": {
            "type": "string",
            "format": "uuid",
            "description": "The uuid of the version."
          },
          "versionNumber": {
            "type": "string",
            "pattern": "^\\d-\\d-\\d$",
            "example": "10.1.1",
            "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
          },
          "minSupportedMendixVersion": {
            "type": "string",
            "pattern": "^\\d-\\d-\\d$",
            "example": "10.1.1",
            "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
          },
          "publicationDate": {
            "type": "string",
            "format": "yyyy-MM-ddTHH-mm-ssZ",
            "example": "2023-09-01T09:04:00Z"
          }
        }
      },
      "contentVersion": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "3d Viewer",
                "description": "The name of the version of the content"
              },
              "versionId": {
                "type": "string",
                "format": "uuid",
                "description": "The uuid of the version."
              },
              "versionNumber": {
                "type": "string",
                "pattern": "^\\d-\\d-\\d$",
                "example": "10.1.1",
                "description": "The version number of the version. this will be format of major.minor.patch (example - 1.0.0)."
              },
              "minSupportedMendixVersion": {
                "type": "string",
                "pattern": "^\\d-\\d-\\d$",
                "example": "10.1.1",
                "description": "This is the Studio Pro version number selected during the onboarding. This means any Studio Pro version equal to or greater than this version is compatible with the latest version of the content."
              },
              "publicationDate": {
                "type": "string",
                "format": "yyyy-MM-ddTHH-mm-ssZ",
                "example": "2023-09-01T09:04:00Z"
              }
            }
          }
        ],
        "properties": {
          "releaseNotes": {
            "type": "string",
            "example": "The is the release notes for this version.",
            "description": "The is the release notes for the published versions."
          }
        }
      }
    },
    "securitySchemes": {
      "PersonalAccessToken": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "For more information about requesting and using a token see the [documentation](https://docs.mendix.com/developerportal/community-tools/mendix-profile/#pat).<br/> The header must be set to `MxToken <Your PAT>`."
      }
    }
  },
  "tags": [
    {
      "name": "content"
    }
  ],
  "security": [
    {
      "PersonalAccessToken": []
    }
  ]
}
